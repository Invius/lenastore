{"version":3,"sources":["lenaViews/FollowPurchaseView/FollowPurchaseView.jsx","lenaHelpers/Helpers.js"],"names":["NewProductCard","lazy","CardFollowList","MessageFollowList","Basket","Modal","ProductsView","props","EPurchaseState","toPay","payed","finalized","old","val","inKey","warning","finalVal","messageActions","name","callback","newMessage","replaceAll","setIsLoading","api","idSaved","then","data","conversations","setMessages","messages","setWarningData","warningData","isVisible","setNewMessage","title","message","actions","getMessageModalStructure","isWarning","catch","err","console","log","length","substring","id","className","placeholder","required","value","onChange","e","target","useState","photos","setPhotos","view","total","setTotal","purchaseState","setPurchaseState","warnings","setWarnings","products","setProducts","setId","setIdSaved","timer","setTimer","isMD","getCSSQuery","useMediaQuery","useEffect","clearInterval","Linker","navigate","useNavigate","type","onClick","route","text","style","backgroundImage","isFollowMD","map","product","idx","key","bodyMessage","isList","index","user","sender","idForInterval","requestToCheck","details","formatDate","Date","date","toLocaleDateString","address","phone","priceTotal","state","conf","config","inter","setInterval","hidden","Object","keys","photoCollection","item","innerIndex","group","src","width","alt","wantedQuery","isXL","query","isLG","isSMD","isSM"],"mappings":"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","file":"static/js/13.4580d8b8.chunk.js","sourcesContent":["\r\nimport './FollowPurchaseView.css';\r\nimport React, { lazy, useState, useEffect} from \"react\";\r\nimport * as api from \"../../lenaHelpers/APIRequests.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IoSearchCircle } from \"react-icons/io5\";\r\nimport { BiConversation } from \"react-icons/bi\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { getCSSQuery } from '../../lenaHelpers/Helpers';\r\nimport {\r\n  LightgalleryProvider,\r\n  LightgalleryItem,\r\n} from \"react-lightgallery\";\r\nimport \"lightgallery.js/dist/css/lightgallery.css\";\r\n\r\nconst NewProductCard = lazy(() =>\r\n  import(\"../NewProductCard/NewProductCard\")\r\n);\r\n\r\nconst CardFollowList = lazy(() =>\r\n  import(\"../SingleFollowCard\")\r\n);\r\n\r\nconst MessageFollowList = lazy(() =>\r\n  import(\"../SingleFollowMessage\")\r\n);\r\n\r\nconst Basket = lazy(() =>\r\n  import(\"../../lenaViews/Basket/Basket\")\r\n);\r\n\r\nconst Modal = lazy(() =>\r\n  import(\"../Modal/Modal\")\r\n);\r\n\r\n\r\n\r\n\r\nexport default function ProductsView(props) {\r\n\r\n        const EPurchaseState ={\r\n          toPay: 'Aguarda Pagamento', \r\n          payed: 'Pago verifique nos comentarios a data de entrega', \r\n          finalized: 'Pago e entregue', \r\n          old: 'Should not be here',\r\n          val: (inKey)=>{\r\n            return EPurchaseState[inKey] || ''\r\n          },\r\n          warning: (inKey) =>{\r\n            let finalVal = '';\r\n\r\n            switch (EPurchaseState[inKey]) {\r\n              case EPurchaseState.toPay:\r\n                finalVal = \"Devolvemos o dinheiro, até ao dia antes da entrega.\";\r\n                break;\r\n              case EPurchaseState.payed:\r\n                finalVal = \"Se não defeniu a sua morada como verdadeiramente queria, por favor envie uma mensagem a vendedora com a nova morada.\";\r\n                break;\r\n              case EPurchaseState.finalized:\r\n                finalVal = \"Concluio a sua compra com sucesso!\";\r\n                break;\r\n              case EPurchaseState.old:\r\n                finalVal = 'Should not be here';\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n\r\n            return finalVal\r\n          },\r\n        }\r\n\r\n        const messageActions = [\r\n          {\r\n            name: 'Enviar resposta',\r\n            callback: ()=>{\r\n              if(newMessage.replaceAll(' ', '')){\r\n                props.setIsLoading(true);\r\n                api.comment(idSaved, newMessage).then((data)=>{\r\n                  if(data.conversations){\r\n                    setMessages([\r\n                      messages[0],\r\n                      ...data.conversations\r\n                    ]);\r\n                    setWarningData({\r\n                      ...warningData,\r\n                      isVisible: false\r\n                    });\r\n                    setNewMessage('');\r\n                  }else{\r\n                    setWarningData({\r\n                      title: 'Erro',\r\n                      message: 'Erro a enviar mensagem: Poderá ter sido falha no sistema ou você ja excedeu o limite de 3 messagens. Se assim for por favor, aguarde a resposta do vendedor!',\r\n                      actions: [{\r\n                        name: 'Ok',\r\n                        callback: ()=>{\r\n                          setWarningData({\r\n                            title: 'Messagens',\r\n                            message: getMessageModalStructure(),\r\n                            actions: messageActions,\r\n                            isWarning: false,\r\n                            isVisible: false\r\n                          })\r\n                        }\r\n                      }],\r\n                      isWarning: true,\r\n                      isVisible: true\r\n                    });\r\n                  }\r\n\r\n                  props.setIsLoading(false);\r\n                }).catch((err)=>{\r\n                  console.log(err);\r\n                  props.setIsLoading(false);\r\n                });\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Não',\r\n            callback: ()=>{\r\n              setWarningData({\r\n                ...warningData,\r\n                isVisible: false\r\n              });\r\n            }\r\n          },\r\n        ];\r\n\r\n        const getMessageModalStructure = () =>{\r\n          return(<div>\r\n            <p>\r\n              {messages.length ? (messages[messages.length - 1].message.substring(0, 50) + '...') : ''}\r\n            </p>\r\n            <textarea\r\n                    id=\"messages\"\r\n                    name=\"messages\" \r\n                    className=\"form-control col-sm\"\r\n                    placeholder=\"Escreva aqui a sua mensagem...\"\r\n                    required\r\n                    value={newMessage}\r\n                    onChange={(e)=>{\r\n                      //console.log(e.target.value);\r\n                      setNewMessage(e.target.value);\r\n                    }}\r\n              />\r\n          </div>);\r\n        }\r\n\r\n        const [photos, setPhotos] = useState({});\r\n\r\n        const [messages, setMessages] = useState([]);\r\n        const [view,] = useState('list');\r\n        const [total, setTotal] = useState(0);\r\n        const [purchaseState, setPurchaseState] = useState('');\r\n        const [warnings, setWarnings] = useState('');\r\n        const [products, setProducts] = useState([]);\r\n        const [id, setId] = useState('');\r\n        const [idSaved, setIdSaved] = useState('');\r\n        const [newMessage, setNewMessage] = useState('');\r\n        const [warningData, setWarningData] = useState({\r\n          title: 'Messagens',\r\n          message: getMessageModalStructure(),\r\n          actions: messageActions,\r\n          isWarning: false,\r\n          isVisible: false\r\n        });\r\n        const [timer, setTimer] = useState();\r\n\r\n        const isMD = getCSSQuery(useMediaQuery, 'md');\r\n\r\n        useEffect(()=>{\r\n          setWarningData({\r\n            ...warningData,\r\n            message: getMessageModalStructure(),\r\n            actions: messageActions,\r\n          })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[newMessage]);\r\n\r\n        useEffect(()=>{\r\n          \r\n          return ()=>{\r\n            if(timer){\r\n              clearInterval(timer);\r\n            }\r\n          }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[]);\r\n      \r\n        const checkPurchase = () =>{\r\n          props.setIsLoading(true);\r\n          const idForInterval = id;\r\n\r\n          const requestToCheck = ()=>{\r\n            console.log('updates');\r\n            api.showSale(idForInterval).then((data)=>{\r\n              if(data.details && data.products && data.conversations && data.conversations.messages){\r\n                const formatDate = new Date(data.details.date).toLocaleDateString('pt-PT');\r\n                setMessages([\r\n                  {\r\n                    sender: \"c\",\r\n                    message: `Conversa Automática - ${formatDate} - ${data.details.address} - ${data.details.phone}`\r\n                  },\r\n                  ...data.conversations.messages\r\n                ]);\r\n                setTotal(data.details.priceTotal);\r\n                setPurchaseState(EPurchaseState.val(data.details.state));\r\n                setProducts(data.products.products);\r\n                setIdSaved(id);\r\n                \r\n                api.config(data.details.state).then((conf)=>{\r\n                  setWarnings(conf.config);\r\n                });\r\n              }\r\n              props.setIsLoading(false);\r\n            }).catch((err)=>{\r\n              props.setIsLoading(false);\r\n            });\r\n          }\r\n\r\n          if(timer){\r\n            clearInterval(timer);\r\n          }\r\n\r\n          const inter = setInterval(requestToCheck, 10000);\r\n\r\n          requestToCheck();\r\n\r\n          setTimer(inter);\r\n          \r\n        }\r\n\r\n        const Linker = (props) =>{\r\n          const navigate = useNavigate();\r\n          return(  <button\r\n            type=\"button\"\r\n            className=\"btn btn-sm btn-primary base-button-color\"\r\n            title=\"navigate\"\r\n            onClick={()=>{navigate(props.route)}}\r\n          >\r\n          {props.text}\r\n          </button>);\r\n        }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <LightgalleryProvider>\r\n          <div\r\n            className=\"p-5 bg-primary bs-cover\"\r\n            style={{\r\n              backgroundImage: \"url(../../images/LenaTestProducts/banner.png)\",\r\n            }}\r\n          >\r\n            <div className=\"container text-center header-fpv\">\r\n              {isMD? <></> : <Linker text={'Products'} route={'/Products'}/>}\r\n              <span className=\"display-5 px-3 bg-white rounded shadow\">\r\n                Seguimento de Encomenda\r\n              </span>\r\n              <div className=\"actions-md-fpv\">\r\n                <Basket isFollowMD={isMD}/>\r\n                {isMD? <Linker text={'Products'} route={'/Products'}/> : <></>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"container-fluid mb-3 follow-data-container-fpv\">\r\n            <div className=\"row\">\r\n              {\r\n                isMD? <></> : \r\n                (<div className=\"col-md-4\">\r\n                  <div className=\"row g-3 follow-overload-fpv\">\r\n                    {view === \"list\" &&\r\n                      products.map((product, idx) => {\r\n                        return (\r\n                          <div key={idx} className=\"col-md-12\">\r\n                            <NewProductCard \r\n                              data={product} \r\n                              photos={photos}\r\n                              setPhotos={setPhotos}/>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>)\r\n              }\r\n              \r\n              {\r\n                products.length > 0 ? \r\n                (<div className=\"col-md-4 indication-follow-purchase-fpv\">\r\n                  <CardFollowList title=\"Estado da Encomenda\" bodyMessage={purchaseState}/>\r\n                  <CardFollowList title=\"Total Encomenda\" bodyMessage={ total + '€'}/>\r\n                  <CardFollowList title=\"Avisos\" bodyMessage={warnings} isList={true}/>\r\n                </div>) : (<></>)\r\n              }\r\n              <div className=\"col-md-4\">\r\n                <div className=\"messages-follow-container-fpv\">\r\n                  {messages.map((message, index)=>{\r\n                    return (\r\n                        <MessageFollowList key={index}\r\n                          user={message.sender} \r\n                          message={message.message}></MessageFollowList>\r\n                    );\r\n                  })}\r\n                </div>\r\n                {messages.length ?\r\n                <div className='conversation-fpv'>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-primary base-button-color\"\r\n                    title=\"search\"\r\n                    onClick={()=>{\r\n                      setWarningData({\r\n                        ...warningData,\r\n                        isVisible: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    <BiConversation className='icon-fpv'/>\r\n                  </button>\r\n                </div> : <></>}\r\n              </div>\r\n              {\r\n                isMD? \r\n                (<div className=\"col-md-4 margins-md-fpv\">\r\n                  <div className=\"row g-3 follow-overload-fpv\">\r\n                    {view === \"list\" &&\r\n                      products.map((product, idx) => {\r\n                        return (\r\n                          <div key={idx} className=\"col-md-12\">\r\n                            <NewProductCard data={product} photos={photos} setPhotos={setPhotos} />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>) : <></>\r\n              }\r\n            </div> \r\n          </div>\r\n          <div className=\"follow-basket-fpv container\">\r\n            <div className=\"input-container-fpv\">\r\n              <span className=\"col-sm-1\">\r\n                  ID da Compra\r\n              </span>\r\n              <input\r\n                    id=\"follow-id\"\r\n                    name=\"followid\"\r\n                    type=\"text\"\r\n                    className=\"form-control col-sm\"\r\n                    placeholder=\"ID\"\r\n                    required\r\n                    value={id}\r\n                    onChange={(e)=>setId(e.target.value)}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-primary base-button-color\"\r\n                title=\"search\"\r\n                onClick={checkPurchase}\r\n              >\r\n              <IoSearchCircle className='icon-fpv'/>\r\n              </button>\r\n            </div>\r\n            \r\n          </div>\r\n          <Modal {...warningData}/>\r\n          <div hidden={true}>\r\n              {Object.keys(photos).map((photoCollection, index)=>{\r\n                  return photos[photoCollection].map((item, innerIndex)=>{\r\n                    return(\r\n                    <LightgalleryItem key={index} group={photoCollection} src={item}>\r\n                      <img src={item} style={{ width: \"100%\" }} alt={\"\"}/>\r\n                    </LightgalleryItem>\r\n                    );\r\n                  })\r\n                })\r\n              }\r\n          </div>\r\n          </LightgalleryProvider>\r\n        </>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nexport const getCSSQuery = (useMediaQuery, wantedQuery) => {\r\n    const isXL = useMediaQuery({ query: '(min-width: 1824px)' });\r\n    const isLG = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const isMD = useMediaQuery({ query: '(max-width: 766px)' });\r\n    const isSMD = useMediaQuery({ query: '(max-width: 450px)' });\r\n    const isSM = useMediaQuery({ query: '(max-width: 360px)' });\r\n\r\n    switch (wantedQuery) {\r\n        case \"xl\":\r\n            return isXL;\r\n        case \"lg\":\r\n            return isLG;\r\n        case \"md\":\r\n            return isMD;\r\n        case \"smd\":\r\n            return isSMD;\r\n        case \"sm\":\r\n            return isSM;\r\n    \r\n        default:\r\n            return false;\r\n    }\r\n}"],"sourceRoot":""}