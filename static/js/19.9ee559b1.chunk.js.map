{"version":3,"sources":["components/Paging.jsx"],"names":["range","from","to","step","i","push","Paging","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","extraPages","sizing","alignment","ceil","this","aria-label","className","map","index","key","onClick","aria-hidden","href","e","Component"],"mappings":"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","file":"static/js/19.9ee559b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Paging extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const {\r\n      totalRecords = null,\r\n      pageLimit = 30,\r\n      pageNeighbours = 0,\r\n      sizing = \"\",\r\n      alignment = \"\",\r\n    } = props;\r\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\r\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = (page) => {\r\n    const { onPageChanged = (f) => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords,\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className={`pagination ${this.sizing} ${this.alignment}`}>\r\n          {pages.map((page, index) => {\r\n            if (page === LEFT_PAGE)\r\n              return (\r\n                <li key={index} className=\"page-item\">\r\n                  <button\r\n                    className=\"page-link\"\r\n                    aria-label=\"Previous\"\r\n                    onClick={this.handleMoveLeft}\r\n                  >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </button>\r\n                </li>\r\n              );\r\n\r\n            if (page === RIGHT_PAGE)\r\n              return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#!\"\r\n                    aria-label=\"Next\"\r\n                    onClick={this.handleMoveRight}\r\n                  >\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n            return (\r\n              <li\r\n                key={index}\r\n                className={`page-item${currentPage === page ? \" active\" : \"\"}`}\r\n              >\r\n                <a\r\n                  className=\"page-link\"\r\n                  href=\"#!\"\r\n                  onClick={(e) => this.handleClick(page, e)}\r\n                >\r\n                  {page}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nPaging.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  sizing: PropTypes.string,\r\n};\r\n\r\nexport default Paging;\r\n"],"sourceRoot":""}