{"version":3,"sources":["lenaViews/BasketView/BasketView.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","lenaHelpers/Helpers.js"],"names":["Modal","lazy","NewProductCard","ProductsView","props","isMD","getCSSQuery","useMediaQuery","navigate","useNavigate","stateActions","name","callback","setIsLoading","api","phoneNumber","address","products","map","product","id","category","then","data","console","log","success","storage","total","catch","err","setWarningData","warningData","isVisible","useState","photos","setPhotos","view","setName","setPhoneNumber","setAddress","totalPrice","setTotalPrice","setProducts","title","message","actions","isWarning","useEffect","updateProducts","productsToBasket","productsToRemove","length","forEach","newBasket","Linker","type","className","onClick","route","text","toRemove","Fragment","style","backgroundImage","placeholder","required","value","onChange","e","target","hasName","replaceAll","hasPhone","hasAddress","idx","key","showPrice","isToRemove","hidden","Object","keys","photoCollection","index","item","innerIndex","group","src","width","alt","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","wantedQuery","isXL","query","isLG","isSMD","isSM"],"mappings":"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","file":"static/js/12.c227c013.chunk.js","sourcesContent":["\r\nimport './BasketView.css';\r\nimport \"lightgallery.js/dist/css/lightgallery.css\";\r\nimport React, { lazy, useState, useEffect } from \"react\";\r\nimport * as api from \"../../lenaHelpers/APIRequests.js\";\r\nimport * as storage from '../../lenaHelpers/LocalStorage.js';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  LightgalleryProvider,\r\n  LightgalleryItem,\r\n} from \"react-lightgallery\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { getCSSQuery } from '../../lenaHelpers/Helpers';\r\n\r\n\r\nconst Modal = lazy(() =>\r\n  import(\"../Modal/Modal\")\r\n);\r\n\r\nconst NewProductCard = lazy(() =>\r\n  import(\"../NewProductCard/NewProductCard\")\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport default function ProductsView(props) {\r\n\r\n        const isMD = getCSSQuery(useMediaQuery, 'md');\r\n        \r\n\r\n        const navigate = useNavigate();\r\n        const stateActions = [[\r\n          {\r\n            name: 'Sim',\r\n            callback: ()=>{\r\n              props.setIsLoading(true);\r\n              api.newSale(name, phoneNumber, address, products.map((product)=> {\r\n                return({\r\n                  id: product.id, \r\n                  category: product.category\r\n                });\r\n              }), true).then((data)=>{\r\n                console.log(data);\r\n                if(data.success){\r\n                  storage.cleanBasket();\r\n                  storage.insertPlacedOrderData(data.id, data.total);\r\n                  navigate('/PlacedOrder');\r\n                }\r\n\r\n                props.setIsLoading(false);\r\n              }).catch((err)=>{\r\n                console.log(err);\r\n                props.setIsLoading(false);\r\n              });\r\n            }\r\n          },\r\n          {\r\n            name: 'Não',\r\n            callback: ()=>{\r\n              setWarningData({\r\n                ...warningData,\r\n                isVisible: false\r\n              });\r\n            }\r\n          },\r\n        ],[\r\n          {\r\n            name: 'Ok',\r\n            callback: ()=>{\r\n              setWarningData({\r\n                ...warningData,\r\n                isVisible: false\r\n              });\r\n            }\r\n          },\r\n        ],];\r\n\r\n        const [photos, setPhotos] = useState({});\r\n\r\n        const [view,] = useState('list');\r\n        const [name, setName] = useState('');\r\n        const [phoneNumber, setPhoneNumber] = useState('');\r\n        const [address, setAddress] = useState('');\r\n        const [totalPrice, setTotalPrice] = useState(0);\r\n        const [products, setProducts] = useState([]);\r\n        const [warningData, setWarningData] = useState({\r\n          title: 'Aviso',\r\n          message: 'Team a certeza que quer avançar com a compra?',\r\n          actions: stateActions[0],\r\n          isWarning: false,\r\n          isVisible: false\r\n        });\r\n\r\n\r\n      useEffect(() => {\r\n        updateProducts();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n\r\n      const updateProducts = () =>{\r\n        props.setIsLoading(true);\r\n\r\n        const productsToBasket = storage.getBasket();\r\n        setProducts(productsToBasket);\r\n        api.newSale('*', '*', '*', productsToBasket.map((product)=> {\r\n          return({\r\n            id: product.id, \r\n            category: product.category\r\n          });\r\n        }), false).then((data)=>{\r\n          if(data && data.total > -1){\r\n            console.log(data);\r\n            setTotalPrice(data.total);\r\n          }\r\n\r\n          if(data && data.productsToRemove && data.productsToRemove.length){\r\n            data.productsToRemove.forEach(product => {\r\n              storage.removeProductFromBasket(product);\r\n            });\r\n\r\n            const newBasket = storage.getBasket();\r\n            setProducts(newBasket);\r\n          }\r\n          props.setIsLoading(false);\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n          props.setIsLoading(false);\r\n        });\r\n      }\r\n    \r\n      \r\n      const makePurchase = ()=>{\r\n        const hasName = name.replaceAll(' ', '') !== '' && name.replaceAll(' ', '').length > 10; \r\n        const hasPhone = phoneNumber.replaceAll(' ', '') !== '' && phoneNumber.replaceAll(' ', '').length === 9; \r\n        const hasAddress = address.replaceAll(' ', '') !== '' && address.replaceAll(' ', '').length > 10; \r\n\r\n        if(!hasAddress || !hasName || !hasPhone){\r\n          setWarningData({\r\n            ...warningData,\r\n            message:  <> Faltam preencher: <br/>\r\n                        {!hasName ? <> Nome com mais de 10 letras<br/></> : ''} \r\n                        {!hasPhone ? <> Número de telefone com 9 digitos<br/></> : ''} \r\n                        {!hasAddress ? <>Morada com mais de 10 letras</>: ''} \r\n                      </>,\r\n            isVisible: true,\r\n            isWarning: true,\r\n            actions: stateActions[1]\r\n          });\r\n        }else{\r\n          setWarningData({\r\n            ...warningData,\r\n            message: 'Tem a certeza que quer avançar com o pedido?',\r\n            isVisible: true,\r\n            isWarning: false,\r\n            actions: stateActions[0]\r\n          });\r\n        }\r\n      }\r\n\r\n      const Linker = (props) =>{\r\n        const navigate = useNavigate();\r\n        return(  <button\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-primary base-button-color\"\r\n          title=\"navigate\"\r\n          onClick={()=>{navigate(props.route)}}\r\n        >\r\n        {props.text}\r\n        </button>);\r\n      }\r\n\r\n      const toRemove = (product) =>{\r\n        storage.removeProductFromBasket(product);\r\n        updateProducts();\r\n      }\r\n      \r\n      /* \r\n      <div className=\"row\">\r\n              <div className=\"col-md-9\">\r\n                <span className=\"display-5 px-3 bg-white rounded shadow basket-total top-basket-total\">\r\n                  total \r\n                  <br />\r\n                  {totalPrice ?? 0} €\r\n                </span>\r\n              </div> \r\n            </div>\r\n\r\n            normal\r\n            <div className=\"col-md-3\">\r\n                <span className=\"display-5 px-3 bg-white rounded shadow basket-total side-basket-total\">\r\n                  total\r\n                  <br />\r\n                  {totalPrice ?? 0} €\r\n                </span>\r\n              </div>\r\n\r\n      */\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <LightgalleryProvider>\r\n          <div\r\n            className=\"p-5 bg-primary bs-cover\"\r\n            style={{\r\n              backgroundImage: \"url(../../images/LenaTestProducts/banner.png)\",\r\n            }}\r\n          >\r\n            <div className=\"container text-center header-bv\">\r\n              \r\n              {isMD ? \r\n                  <></> :\r\n                  <Linker text={'Acompanhar Encomenda'} route={'/FollowPurchase'}></Linker>}\r\n              <span className=\"display-5 px-3 bg-white rounded shadow\">\r\n                Carrinho\r\n              </span>\r\n              <div className={\"actions-md-bv\"}>\r\n                {isMD ? \r\n                  <Linker text={'Acompanhar Encomenda'} route={'/FollowPurchase'}></Linker>\r\n                  : <></>}\r\n                <Linker text={'Productos'} route={'/Products'}></Linker>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"container-fluid mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n              <input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  className=\"form-control adress-basket\"\r\n                  placeholder=\"Nome completo\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e)=>setName(e.target.value)}\r\n                />\r\n              <input\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  type='number'\r\n                  className=\"form-control adress-basket\"\r\n                  placeholder=\"Número de telefone associado ao MBWay\"\r\n                  required\r\n                  value={phoneNumber}\r\n                  onChange={(e)=>setPhoneNumber(e.target.value)}\r\n                />\r\n              <input\r\n                  id=\"adress\"\r\n                  name=\"adress\"\r\n                  type=\"text\"\r\n                  className=\"form-control adress-basket\"\r\n                  placeholder=\"Morada\"\r\n                  required\r\n                  value={address}\r\n                  onChange={(e)=>setAddress(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 purchase-actions-bv\">\r\n                <span className=\"display-5 px-3 bg-white rounded shadow basket-total-bv\">\r\n                  total\r\n                  <br />\r\n                  {totalPrice ?? 0} €\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-lg btn-primary mr-2 col-sm basket-button-bv\"\r\n                  title=\"Products\"\r\n                  onClick={makePurchase}\r\n                  >\r\n                    Fazer Pedido \r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row row-space-bv\">\r\n              <div className=\"col-md-6\">\r\n                <hr />\r\n                <div className=\"row g-3 basket-overload-bv\">\r\n                  {view === \"list\" &&\r\n                    products.map((product, idx) => {\r\n                      return (\r\n                        <div key={idx} className=\"col-md-12 row-bv\">\r\n                          <NewProductCard \r\n                            data={product} \r\n                            showPrice={true}\r\n                            isToRemove={true}\r\n                            toRemove={toRemove}\r\n                            photos={photos}\r\n                            setPhotos={setPhotos}/>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            </div> \r\n          </div>\r\n          <Modal {...warningData}/>\r\n          <div hidden={true}>\r\n              {Object.keys(photos).map((photoCollection, index)=>{\r\n                  return photos[photoCollection].map((item, innerIndex)=>{\r\n                    return(\r\n                    <LightgalleryItem key={index} group={photoCollection} src={item}>\r\n                      <img src={item} style={{ width: \"100%\" }} alt={\"\"}/>\r\n                    </LightgalleryItem>\r\n                    );\r\n                  })\r\n                })\r\n              }\r\n          </div>\r\n        </LightgalleryProvider>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nexport const getCSSQuery = (useMediaQuery, wantedQuery) => {\r\n    const isXL = useMediaQuery({ query: '(min-width: 1824px)' });\r\n    const isLG = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const isMD = useMediaQuery({ query: '(max-width: 766px)' });\r\n    const isSMD = useMediaQuery({ query: '(max-width: 450px)' });\r\n    const isSM = useMediaQuery({ query: '(max-width: 360px)' });\r\n\r\n    switch (wantedQuery) {\r\n        case \"xl\":\r\n            return isXL;\r\n        case \"lg\":\r\n            return isLG;\r\n        case \"md\":\r\n            return isMD;\r\n        case \"smd\":\r\n            return isSMD;\r\n        case \"sm\":\r\n            return isSM;\r\n    \r\n        default:\r\n            return false;\r\n    }\r\n}"],"sourceRoot":""}