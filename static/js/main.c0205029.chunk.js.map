{"version":3,"sources":["serviceWorker.js","reducers/index.js","index.js","localStorage.js","lenaHelpers/LocalStorage.js","lenaHelpers/APIRequests.js","lenaHelpers/Constants.js","App.js","lenaViews/Footer/Footer.jsx","lenaViews/NoService/NoService.jsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","combineReducers","form","formReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","subscribe","stringify","setItem","saveState","ReactDOM","render","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","addProductToBasket","product","currentBasket","push","removeProductFromBasket","hasFoundProduct","filter","inProduct","id","category","getBasket","cleanBasket","removeItem","insertPlacedOrderData","total","getPlacedOrderData","orderDone","getOrdersLimit","getNoService","configAxios","products","Promise","resolve","axios","post","baseURL","data","photo","productPhoto","categories","newSale","name","phone","address","hasToSave","showSale","test","testPhoto","comment","configEnum","contacts","payMethods","noService","welcome","storeName","warnings","delivery","support","returns","toPay","payed","finalized","limitProducts","facebook","instagram","route","InternalServerErrorView","lazy","HomeLenaView","ProductsView","BasketView","PlacedOrderView","FollowPurchaseView","TestProductUI","useState","isLoading","setIsLoading","showNoService","useEffect","global","getHasService","active","spinner","color","Fragment","fallback","className","exact","path","element","Footer","includes","target","style","stroke","NoService","message","setMessage","newMessage","storage"],"mappings":"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","file":"static/js/main.c0205029.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nexport default combineReducers({\r\n  form: formReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\nconst persistedState = loadState();\r\nconst store = createStore(rootReducer, persistedState);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store);\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","export const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem(\"cfstate\");\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  };\r\n  \r\n  export const saveState = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem(\"cfstate\", serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  };\r\n  ","export const addProductToBasket = (product) =>{\r\n   // eslint-disable-next-line no-unused-vars\r\n   let currentBasket = localStorage.getItem('basket');\r\n   currentBasket = currentBasket ? JSON.parse(currentBasket) : [];\r\n\r\n   currentBasket.push(product);\r\n\r\n   localStorage.setItem('basket', JSON.stringify(currentBasket));\r\n\r\n   return currentBasket;\r\n}\r\n\r\nexport const removeProductFromBasket = (product) =>{\r\n   // eslint-disable-next-line no-unused-vars\r\n   let currentBasket = localStorage.getItem('basket');\r\n   let hasFoundProduct = false;\r\n   currentBasket = currentBasket ? JSON.parse(currentBasket) : [];\r\n\r\n   currentBasket = currentBasket.filter((inProduct)=>{\r\n      if(hasFoundProduct){\r\n         return true;\r\n      }else{\r\n         hasFoundProduct = inProduct.id === product.id && inProduct.category === product.category;\r\n         return !hasFoundProduct;\r\n      }\r\n   });\r\n\r\n   localStorage.setItem('basket', JSON.stringify(currentBasket));\r\n\r\n   return currentBasket;\r\n}\r\n\r\nexport const getBasket = () =>{\r\n   // eslint-disable-next-line no-unused-vars\r\n   let currentBasket = localStorage.getItem('basket');\r\n   currentBasket = currentBasket ? JSON.parse(currentBasket) : [];\r\n\r\n   return currentBasket;\r\n}\r\n\r\nexport const cleanBasket = () =>{\r\n   localStorage.removeItem('basket');\r\n}\r\n\r\nexport const insertPlacedOrderData = (id, total) =>{\r\n   localStorage.setItem('order-done', JSON.stringify({id, total}));\r\n}\r\n\r\nexport const getPlacedOrderData = () =>{\r\n   const orderDone = localStorage.getItem('order-done');\r\n\r\n   return orderDone ? JSON.parse(orderDone) : {id: '', total: 0}\r\n}\r\n\r\nexport const setOrdersLimit = (limit) =>{\r\n   localStorage.setItem('products-order-limit', limit);\r\n}\r\n\r\nexport const getOrdersLimit = () =>{\r\n   return localStorage.getItem('products-order-limit');\r\n}\r\n\r\nexport const setNoService = (noService) =>{\r\n   localStorage.setItem('no-service', noService);\r\n}\r\n\r\nexport const getNoService = () =>{\r\n   return localStorage.getItem('no-service');\r\n}\r\n\r\nexport const setWelcome = (welcome) =>{\r\n   localStorage.setItem('welcome', welcome);\r\n}\r\n\r\nexport const getWelcome = () =>{\r\n   return localStorage.getItem('welcome');\r\n}\r\n\r\nexport const setStoreName = (noService) =>{\r\n   localStorage.setItem('store-name', noService);\r\n}\r\n\r\nexport const getStoreName = () =>{\r\n   return localStorage.getItem('store-name');\r\n}\r\n\r\nexport const setContacts = (contacts) =>{\r\n   localStorage.setItem('contacts', contacts);\r\n}\r\n\r\nexport const getContacts = () =>{\r\n   return localStorage.getItem('contacts');\r\n}\r\nexport const setFacebook = (facebook) =>{\r\n   localStorage.setItem('facebook', facebook);\r\n}\r\n\r\nexport const getFacebook = () =>{\r\n   return localStorage.getItem('facebook');\r\n}\r\nexport const setInstagram = (instagram) =>{\r\n   localStorage.setItem('instagram', instagram);\r\n}\r\n\r\nexport const getInstagram = () =>{\r\n   return localStorage.getItem('instagram');\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport * as routes from \"../lenaHelpers/Constants.js\";\r\n\r\nconst commonHeaders = {\r\n  \"Access-Control-Allow-Origin\": '*',\r\n}\r\n\r\nconst configAxios = {\r\n  headers: commonHeaders,\r\n};\r\n\r\nexport const home = () =>{\r\n    return new Promise((resolve) =>{\r\n        axios.get(routes.baseURL, configAxios).then((response) => {\r\n            resolve(response.data);\r\n          }).catch((err)=>{\r\n            resolve(err);\r\n          });\r\n    });\r\n}\r\n\r\n/**\r\n     {\r\n         \"category\": \"Cat1\"\r\n      }\r\n      {\r\n        products\r\n      }\r\n    */\r\nexport const products = (category) =>{\r\n    return new Promise((resolve) =>{\r\n        axios.post(routes.productsByCategory, {\r\n            category\r\n        }, configAxios).then((response) => {\r\n            resolve(response.data.products);\r\n          }).catch((err)=>{\r\n            resolve(err);\r\n          });\r\n    });\r\n}\r\n\r\n/**\r\n      {\r\n           \"id\": \"product1\"\r\n           \"category\": \"Cat1\"\r\n      }\r\n      \r\n      {\r\n        \"productPhoto\": \"img 64\"\r\n       }\r\n     */\r\nexport const photo = (id, category) =>{\r\n    return new Promise((resolve) =>{\r\n        axios.post(routes.photo, {\r\n            id,\r\n            category\r\n        }, configAxios).then((response) => {\r\n            resolve(response.data.productPhoto);\r\n          }).catch((err)=>{\r\n            resolve(err);\r\n          });\r\n    });\r\n}\r\n\r\n/**\r\n     {\r\n    }\r\n    \r\n    {\r\n        categories: []\r\n    }\r\n    */\r\nexport const categories = (id, category) =>{\r\n    return new Promise((resolve) =>{\r\n        axios.get(routes.categories, configAxios).then((response) => {\r\n            resolve(response.data.categories);\r\n          }).catch((err)=>{\r\n            resolve(err);\r\n          });\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n    {\r\n    \"name\": \"\",\r\n    \"phone\": \"\",\r\n    \"address\": \"\",\r\n    \"products\": [{\"id\": \"\", \"category\": \"\"}],\r\n    \"hasToSave\": true\r\n    }\r\n\r\n    {\r\n      success: \"\", \r\n      id: \"\", \r\n      total: 0\r\n      productsToRemove:[]\r\n    }\r\n  */\r\n  export const newSale = (name, phone, address, products, hasToSave) =>{\r\n    return new Promise((resolve) =>{\r\n      axios.post(routes.newSale, {\r\n          name,\r\n          phone,\r\n          address,\r\n          products,\r\n          hasToSave\r\n      }, configAxios).then((response) => {\r\n          console.log(response.data);\r\n          resolve(response.data);\r\n        }).catch((err)=>{\r\n          resolve(err);\r\n        });\r\n  });\r\n}\r\n\r\n/**\r\n    {\r\n    \"id\": \"\"\r\n    }\r\n\r\n    {\r\n      success: \"\", \r\n      id: \"\", \r\n      total: 0\r\n    }\r\n  */\r\n  export const showSale = (id) =>{\r\n    return new Promise((resolve) =>{\r\n      axios.post(routes.showSale, {\r\n          id\r\n      }, configAxios).then((response) => {\r\n          console.log(response.data);\r\n          resolve(response.data);\r\n        }).catch((err)=>{\r\n          resolve(err);\r\n        });\r\n  });\r\n}\r\n\r\n/**\r\n    {\r\n    }\r\n\r\n    {\r\n      \"id\": \"\",\r\n      \"name\": \"\",\r\n      \"price\": 0,\r\n      \"category\": \"\",\r\n      \"description\": \"\"\r\n    }\r\n  */\r\n  export const test = () =>{\r\n    return new Promise((resolve) =>{\r\n      axios.get(routes.test, configAxios).then((response) => {\r\n          console.log(response.data);\r\n          resolve(response.data);\r\n        }).catch((err)=>{\r\n          resolve(err);\r\n        });\r\n  });\r\n}\r\n\r\n/**\r\n    {\r\n    }\r\n\r\n    {\r\n      \"productPhoto\": \"img 64\"\r\n    }\r\n  */\r\n  export const testPhoto = () =>{\r\n    return new Promise((resolve) =>{\r\n      axios.get(routes.testPhoto, configAxios).then((response) => {\r\n          console.log(response.data.productPhoto);\r\n          resolve(response.data.productPhoto);\r\n        }).catch((err)=>{\r\n          resolve(err);\r\n        });\r\n  });\r\n}\r\n\r\n/**\r\n    {\r\n      \"id\": \"\",\r\n      \"comment\": \"\"\r\n    }\r\n\r\n    {\r\n      success: \"Purchase conversation updated!\",\r\n      conversations: data.messages\r\n    }\r\n  */\r\n  export const comment = (id, comment) =>{\r\n    return new Promise((resolve) =>{\r\n      axios.post(routes.comment, {\r\n        id,\r\n        comment\r\n      }, configAxios).then((response) => {\r\n          console.log(response.data);\r\n          resolve(response.data);\r\n        }).catch((err)=>{\r\n          resolve(err);\r\n        });\r\n  });\r\n}\r\n\r\n\r\n\r\nexport const configEnum = {\r\n  contacts      :routes.contacts,   \r\n  payMethods    :routes.payMethods,   \r\n  noService     :routes.noService,   \r\n  welcome       :routes.welcome,   \r\n  storeName     :routes.storeName,   \r\n  warnings      :routes.warnings,   \r\n  delivery      :routes.delivery,    \r\n  support       :routes.support,    \r\n  returns       :routes.returns,    \r\n  toPay         :routes.toPay,    \r\n  payed         :routes.payed,    \r\n  finalized     :routes.finalized,    \r\n  limitProducts :routes.limitProducts,  \r\n  facebook      :routes.facebook,    \r\n  instagram     :routes.instagram,  \r\n}\r\n\r\nexport const config = (route) =>{\r\n  \r\n  return new Promise((resolve) =>{\r\n    console.log(configEnum[route]);\r\n    if(configEnum[route]){\r\n      axios.get(configEnum[route], configAxios).then((response) => {\r\n        console.log(response.data);\r\n        resolve(response.data);\r\n      }).catch((err)=>{\r\n        resolve(err);\r\n      });\r\n    }else{\r\n      resolve({err: 'Route does not exists!'});\r\n    }\r\n  });\r\n}","export const baseURL = 'http://invius.ddns.net/vc';\r\nexport const productsByCategory = baseURL + '/products/bycategory';\r\nexport const photo = baseURL + '/products/photo';\r\nexport const categories = baseURL + '/products/categories';\r\nexport const newSale = baseURL + '/sales/new';\r\nexport const showSale = baseURL + '/sales/showpurchase';\r\nexport const test = baseURL + '/products/UI';\r\nexport const testPhoto = baseURL + '/products/UI/photo';\r\nexport const comment = baseURL + '/sales/mycomment';\r\nexport const home = baseURL + '/';\r\nexport const config = baseURL + '/config';\r\n\r\nexport const contacts       = config + '/contacts';\r\nexport const payMethods     = config + '/payMethods';\r\nexport const noService      = config + '/noService';\r\nexport const welcome        = config + '/welcome';\r\nexport const storeName      = config + '/storeName';\r\nexport const warnings       = config + '/warnings';\r\nexport const delivery       = config + '/delivery';\r\nexport const support        = config + '/support';\r\nexport const returns        = config + '/returns'; \r\nexport const toPay          = config + '/pay'; \r\nexport const payed          = config + '/payed'; \r\nexport const finalized      = config + '/finalized'; \r\nexport const limitProducts  = config + '/limit';\r\nexport const facebook       = config + '/facebook';\r\nexport const instagram      = config + '/instagram';","import React, { Suspense, lazy, useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport * as api from \"./lenaHelpers/APIRequests.js\";\r\nimport * as storage from \"./lenaHelpers/LocalStorage.js\";\r\n\r\nimport Footer from \"./lenaViews/Footer/Footer\";\r\nimport NoService from \"./lenaViews/NoService/NoService\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.js\";\r\nimport \"./App.min.css\";\r\nimport '.\\\\LenaCSS\\\\LenaStyles.css';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport PuffLoader from 'react-spinners/BounceLoader';\r\n\r\nconst InternalServerErrorView = lazy(() => import(\"./views/pages/500\"));\r\nconst HomeLenaView = lazy(() => import(\"./lenaViews/HomeView/HomeView\"));\r\nconst ProductsView = lazy(() => import(\"./lenaViews/ProductsView/ProductsView\"));\r\nconst BasketView = lazy(() => import(\"./lenaViews/BasketView/BasketView\"));\r\nconst PlacedOrderView = lazy(() => import(\"./lenaViews/PlacedOrderView/PlacedOrderView\"));\r\nconst FollowPurchaseView = lazy(() => import(\"./lenaViews/FollowPurchaseView/FollowPurchaseView\"));\r\nconst TestProductUI = lazy(() => import(\"./lenaViews/TestProductUI/TestProductUI\"));\r\n\r\nfunction App() {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showNoService, setShowNoService] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    /* const repeatSignal = () =>{\r\n      api.home().then((response)=>{\r\n        if(response !== 'Home'){\r\n          setShowNoService(true);\r\n\r\n          const url = new URL(window.location.href);\r\n          const rel = url.toString().substring(url.origin.length);\r\n\r\n          if(rel !== '/'){\r\n            window.location.href = '/';\r\n          }\r\n        }else{\r\n          setShowNoService(false);\r\n        }\r\n        setTimeout(repeatSignal, 10000);\r\n      });\r\n    }\r\n    \r\n    api.config('limitProducts').then((conf)=>{\r\n      if(conf && conf.config && !conf.code){\r\n        storage.setOrdersLimit(conf.config);\r\n      }\r\n    });\r\n\r\n    api.config('noService').then((conf)=>{\r\n      if(conf && conf.config && !conf.code){\r\n        storage.setNoService(conf.config);\r\n      }\r\n    });\r\n\r\n    repeatSignal(); */\r\n\r\n    return ()=>{\r\n\r\n    }\r\n  }, []);\r\n\r\n  global.getHasService = () =>{\r\n    return !showNoService;\r\n  }\r\n\r\n  return (\r\n        <LoadingOverlay\r\n            active={isLoading}\r\n            spinner={<PuffLoader color=\"#36d7b7\" />}\r\n          >\r\n          <div id=\"lena-root\">\r\n            <main>\r\n              <BrowserRouter>\r\n                <React.Fragment>\r\n                      <Suspense\r\n                        fallback={\r\n                          <div className=\"text-white text-center mt-3\">Loading...</div>\r\n                        }\r\n                      >\r\n                        <Routes>\r\n                          <Route exact path=\"/Error\" element={<InternalServerErrorView/>} />\r\n                          <Route exact path=\"/\" element={<HomeLenaView setIsLoading={setIsLoading}/>}/>\r\n                          <Route exact path=\"/Products\" element={<ProductsView setIsLoading={setIsLoading} />}/>\r\n                          <Route exact path=\"/FollowPurchase\" element={<FollowPurchaseView setIsLoading={setIsLoading} />}/>\r\n                          <Route exact path=\"/PlacedOrder\" element={<PlacedOrderView setIsLoading={setIsLoading} />}/>\r\n                          <Route exact path=\"/ViewBasket\" element={<BasketView setIsLoading={setIsLoading} />}/>\r\n                          <Route exact path=\"/UI\" element={<TestProductUI setIsLoading={setIsLoading} />}/>\r\n                        </Routes> \r\n                      </Suspense>\r\n                </React.Fragment>\r\n              </BrowserRouter>\r\n            </main>\r\n            <Footer/>\r\n            {showNoService ? <NoService/> : <></>}\r\n          </div>\r\n        </LoadingOverlay>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import './Footer.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport * as api from \"../../lenaHelpers/APIRequests.js\";\r\nimport * as storage from '../../lenaHelpers/LocalStorage.js';\r\nimport { GrInstagram } from 'react-icons/gr';\r\nimport { ImFacebook2 } from 'react-icons/im';\r\nimport { FcBusinessContact } from 'react-icons/fc';\r\n\r\nexport default function Footer() {\r\n    const [instagram, setInstagram] = useState('');\r\n    const [facebook, setFacebook] = useState('');\r\n    const [contacts, setContacts] = useState('');\r\n\r\n    useEffect(()=>{\r\n       /*  api.config('contacts').then((conf)=>{\r\n            const inContacts = storage.getContacts();\r\n\r\n            if(conf && conf.config && !conf.code){\r\n                setContacts(conf.config);\r\n                storage.setContacts(conf.config);\r\n            }else if(inContacts){\r\n                setContacts(inContacts);\r\n            }\r\n        });\r\n      \r\n        api.config('facebook').then((conf)=>{\r\n            const inFacebook = storage.getFacebook();\r\n\r\n            if(conf && conf.config && !conf.code){\r\n                setFacebook(conf.config);\r\n                storage.setFacebook(conf.config);\r\n            }else if(inFacebook){\r\n                setFacebook(inFacebook);\r\n            }\r\n        });\r\n\r\n        api.config('instagram').then((conf)=>{\r\n            const inInstagram = storage.getInstagram();\r\n\r\n            if(conf && conf.config && !conf.code){\r\n                setInstagram(conf.config);\r\n                storage.setInstagram(conf.config);\r\n            }else if(inInstagram){\r\n                setInstagram(inInstagram);\r\n            }\r\n        }); */\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <footer className='main-f'>\r\n                <div className='contacts-f'>\r\n                    <h4>\r\n                        <FcBusinessContact/>\r\n                        Contactos:\r\n                    </h4>\r\n                    <p className='contacts-text-f'>\r\n                        {contacts}\r\n                    </p>\r\n                </div>\r\n                <div className='social'>\r\n                    <a href={instagram.includes('https://')? instagram : 'https://' + instagram} target=\"_blank\">\r\n                        <GrInstagram className='instagram-f'/>\r\n                    </a>\r\n                    <a href={facebook.includes('https://')? facebook : 'https://' + facebook} target=\"_blank\">\r\n                        <ImFacebook2 className='facebook-f' style={{ stroke: \"url(#blue-gradient)\" }}/>\r\n                    </a>\r\n                </div>\r\n            </footer>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import './NoService.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport * as storage from '../../lenaHelpers/LocalStorage.js';\r\n\r\nexport default function NoService() {\r\n    const [message, setMessage] = useState('Lamentamos sem serviço!');\r\n\r\n    useEffect(()=>{\r\n        const newMessage = storage.getNoService();\r\n\r\n        if(newMessage){\r\n            setMessage(newMessage);\r\n        }\r\n    }, [])\r\n  return (\r\n    <div className='container-ns'>\r\n        <strong className='message-ns'>\r\n            {message}\r\n        </strong>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}